'use strict';const DB_VERSION=1;class ImageDB{constructor(){const a=indexedDB.open('image-db',DB_VERSION);this.dbPromise=new Promise((b,c)=>{this.dbResolve=b,this.dbReject=c,a.onerror=(a)=>this.dbReject(a),a.onupgradeneeded=(a)=>this.createObjectStore(a),a.onsuccess=()=>this.dbOpened(a)})}store(a){const b=new Promise((b,c)=>{this.dbPromise.then((d)=>{const e=d.transaction(['images'],'readwrite'),f=e.objectStore('images').put(a);f.onsuccess=()=>b(f.result),f.onerror=c}).catch(c)});return b}retrieve(a){const b=new Promise((b,c)=>{this.dbPromise.then((d)=>{const e=d.transaction(['images'],IDBTransaction.READ_ONLY),f=e.objectStore('images').get(a);f.onsuccess=()=>b(f.result),f.onerror=c}).catch(c)});return b}dbOpened(a){this.dbResolve(a.result),this.dbPromise.then((a)=>{a.onerror=(a)=>this.error(a)})}error(a){console.error(a)}createObjectStore(a){a.target.result.createObjectStore('images',{autoIncrement:!0})}}var db=new ImageDB;class ViewState{}class View{constructor(a){this.viewElement=a}show(){this.viewElement.classList.remove('hidden')}hide(){this.viewElement.classList.add('hidden')}getState(){return this.state||new ViewState}setState(a){this.state=a}}const streamConstraints={audio:!1,video:{height:{ideal:1080},width:{ideal:1920},facingMode:'user'}};class CaptureView extends View{constructor(){super(document.getElementById('capture-view')),this.videoElement=this.viewElement.querySelector('video#capture-preview'),this.buttonElement=document.getElementById('capture-button'),this.buttonElement.addEventListener('click',()=>this.takePhoto())}show(){navigator.mediaDevices.enumerateDevices().then((a)=>{a=a.filter((a)=>'videoinput'===a.kind),navigator.mediaDevices.getUserMedia(streamConstraints).then((a)=>{this.videoElement.srcObject=a,this.videoElement.onloadedmetadata=()=>this.videoElement.play();let b=!1;if('ImageCapture'in window){const c=a.getVideoTracks()[0],d=c.getConstraints();'user'===d.facingMode&&(b=!0),this.capture=new ImageCapture(c)}b?this.videoElement.classList.add('mirror'):this.videoElement.classList.remove('mirror')})}),super.show()}hide(){this.capture&&this.capture.track.stop(),this.videoElement.pause(),super.hide()}takePhoto(){if(this.capture)this.capture.takePhoto().then((a)=>{db.store(a).then((a)=>router.visit(`/image/${a}`))});else{const a=document.createElement('canvas'),b=a.getContext('2d');a.width=this.videoElement.videoWidth,a.height=this.videoElement.videoHeight,b.drawImage(this.videoElement,0,0),a.toBlob((a)=>{a&&db.store(a).then((a)=>router.visit(`/image/${a}`))},'image/jpg')}}}var fragmentShader='\nprecision highp float;\nvarying vec2 texCoords;\nuniform sampler2D textureSampler;\nuniform vec2 sourceSize;\nuniform float saturation;\nuniform float warmth;\nuniform float sharpen;\nuniform float brightness;\nuniform float contrast;\nvec3 HSVFromRGB(vec3 rgb) {\n  float h;\n  float s;\n  float v;\n  float cmax = max(max(rgb.r, rgb.g), rgb.b);\n  float cmin = min(min(rgb.r, rgb.g), rgb.b);\n  float delta = cmax - cmin;\n  if (delta == 0.0) {\n    h = 0.0;\n  } else if (cmax == rgb.r) {\n    float part = (rgb.g - rgb.b) / delta;\n    if (part > 6.0) {\n      part -= 6.0;\n    }\n    h = 60.0 * part;\n  } else if (cmax == rgb.g) {\n    h = 60.0 * (((rgb.b - rgb.r) / delta) + 2.0);\n  } else if (cmax == rgb.b) {\n    h = 60.0 * (((rgb.r - rgb.g) / delta) + 4.0);\n  }\n  if (cmax == 0.0) {\n    s = 0.0;\n  } else {\n    s = delta / cmax;\n  }\n  v = cmax;\n  return vec3(h, s, v);\n}\nvec3 RGBFromHSV(vec3 hsv) {\n  float c = hsv.y * hsv.z;\n  float a = hsv.x / 60.0;\n  if (a > 2.0) {\n    a -= 2.0;\n  }\n  if (a > 2.0) {\n    a -= 2.0;\n  }\n  float b = abs(a - 1.0);\n  float x = c * (1.0 - b);\n  vec3 m = vec3(hsv.z - c);\n  vec3 rgb;\n  if (hsv.x < 60.0) {\n    rgb = vec3(c, x, 0.0);\n  } else if (hsv.x < 120.0) {\n    rgb = vec3(x, c, 0.0);\n  } else if (hsv.x < 180.0) {\n    rgb = vec3(0.0, c, x);\n  } else if (hsv.x < 240.0) {\n    rgb = vec3(0.0, x, c);\n  } else if (hsv.x < 300.0) {\n    rgb = vec3(x, 0.0, c);\n  } else {\n    rgb = vec3(c, 0.0, x);\n  }\n  return rgb + m;\n}\nvoid main() {\n  vec4 tex = texture2D(textureSampler, texCoords);\n  vec4 texa = texture2D(textureSampler, texCoords + vec2(-sourceSize.x, -sourceSize.y));\n  vec4 texb = texture2D(textureSampler, texCoords + vec2(0.0, -sourceSize.y));\n  vec4 texc = texture2D(textureSampler, texCoords + vec2(sourceSize.x, -sourceSize.y));\n  vec4 texd = texture2D(textureSampler, texCoords + vec2(-sourceSize.x, 0.0));\n  vec4 texe = texture2D(textureSampler, texCoords + vec2(0.0, 0.0));\n  vec4 texf = texture2D(textureSampler, texCoords + vec2(sourceSize.x, 0.0));\n  vec4 texg = texture2D(textureSampler, texCoords + vec2(-sourceSize.x, sourceSize.y));\n  vec4 texh = texture2D(textureSampler, texCoords + vec2(0.0, sourceSize.y));\n  vec4 texi = texture2D(textureSampler, texCoords + vec2(sourceSize.x, sourceSize.y));\n  vec4 blur = texa + 2.0 * texb + texc + 2.0 * texd + 4.0 * texe + 2.0 * texf + texg + 2.0 * texh + texi;\n  blur /= 16.0;\n  tex += (tex - blur) * sharpen;\n  vec3 hsv = HSVFromRGB(tex.rgb);\n  hsv.y = hsv.y * saturation;\n  vec4 color = vec4(RGBFromHSV(hsv), tex.a);\n  color.r += warmth;\n  color.b -= warmth;\n  vec4 gray = vec4(0.5, 0.5, 0.5, 1);\n  color = mix(color * brightness, mix(gray, color, contrast), 0.5);\n  float dist = 2.0 * max(abs(0.5 - texCoords.y) - 0.05, 0.0);\n  color.a = 1.0;\n  gl_FragColor = color;\n}\n';const BASE_VERTEX_SHADER=`
attribute vec2 position;
attribute vec2 uv;

varying vec2 texCoords;

void main() {
  gl_Position = vec4(position, 0, 1.0);
  texCoords = uv;
}`,BASE_FRAGMENT_SHADER=`
precision highp float;

varying vec2 texCoords;

uniform sampler2D textureSampler;

void main() {
  gl_FragColor = texture2D(textureSampler, texCoords);
}`,POSITIONS=new Float32Array([-1,-1,-1,1,1,1,1,-1]),UVS=new Float32Array([0,1,0,0,1,0,1,1]),INDEX=new Uint16Array([0,1,2,0,2,3]);class ImageShader{constructor(){this.canvas=document.createElement('canvas');const a=this.canvas.getContext('webgl');if(null===a)throw new Error(`Couldn't get a WebGL context`);const b=a;this.context=b;const c=b.createTexture();if(null===c)throw new Error('Error getting texture ID');this.textureId=c,this.programId=0,this.vertShader=BASE_VERTEX_SHADER,this.fragShader=BASE_FRAGMENT_SHADER,this.uniformLocations=new Map,this.createVAO(INDEX,POSITIONS,UVS),b.clearColor(1,1,1,1),this.dirtyProgram=!0}setImage(a){const b=this.context;b.activeTexture(b.TEXTURE0),b.bindTexture(b.TEXTURE_2D,this.textureId),b.texImage2D(b.TEXTURE_2D,0,b.RGBA,b.RGBA,b.UNSIGNED_BYTE,a),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.LINEAR),b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.LINEAR)}setVertexShader(a){this.vertShader=a,this.dirtyProgram=!0}setFragmentShader(a){this.fragShader=a,this.dirtyProgram=!0}setUniform(a,b){const c=this.context;if(this.dirtyProgram&&this.createProgram(),!this.uniformLocations.has(a))return void console.warn(`Tried to set unknown uniform ${a}`);const d=this.uniformLocations.get(a);switch(d.type){case c.FLOAT:c.uniform1fv(d.location,[b]);break;case c.FLOAT_VEC2:c.uniform2fv(d.location,b);break;case c.FLOAT_VEC3:c.uniform3fv(d.location,b);break;case c.FLOAT_VEC4:c.uniform4fv(d.location,b);break;case c.BOOL:case c.INT:c.uniform1iv(d.location,[b]);break;case c.BOOL_VEC2:case c.INT_VEC2:c.uniform2iv(d.location,b);break;case c.BOOL_VEC3:case c.INT_VEC3:c.uniform3iv(d.location,b);break;case c.BOOL_VEC4:case c.INT_VEC4:c.uniform4iv(d.location,b);break;default:console.error(`Couldn't set uniform, unsupported type`);}}render(){const a=this.context;this.dirtyProgram&&this.createProgram(),a.viewport(0,0,a.drawingBufferWidth,a.drawingBufferHeight),a.clear(a.COLOR_BUFFER_BIT|a.DEPTH_BUFFER_BIT),a.drawElements(a.TRIANGLES,6,a.UNSIGNED_SHORT,0),a.flush()}createProgram(){const a=this.context,b=this.compileShader(this.vertShader,a.VERTEX_SHADER),c=this.compileShader(this.fragShader,a.FRAGMENT_SHADER),d=a.createProgram();if(null===d)throw new Error(`Couldn't get a program ID`);if(this.programId=d,a.attachShader(d,b),a.attachShader(d,c),a.linkProgram(d),!a.getProgramParameter(d,a.LINK_STATUS)){const b=a.getProgramInfoLog(d);throw new Error('Could not link shader program. \n\n'+b)}if(a.validateProgram(d),!a.getProgramParameter(d,a.VALIDATE_STATUS)){const b=a.getProgramInfoLog(d);throw new Error('Could not validate shader program. \n\n'+b)}a.useProgram(d),this.uniformLocations=new Map,this.getUniformLocations(),this.dirtyProgram=!1}compileShader(a,b){const c=this.context,d=c.createShader(b);if(null===d)throw new Error('Error creating shader');if(c.shaderSource(d,a),c.compileShader(d),!c.getShaderParameter(d,c.COMPILE_STATUS))throw new Error(`Couldn't compiler shader: ${c.getShaderInfoLog(d)}`);return d}getUniformLocations(){const a=this.context,b=a.getProgramParameter(this.programId,a.ACTIVE_UNIFORMS);for(let c=0;c<b;c++){const b=a.getActiveUniform(this.programId,c);if(null===b)throw new Error(`Couldn't get uniform info`);const d=a.getUniformLocation(this.programId,b.name);d&&this.uniformLocations.set(b.name,{type:b.type,location:d})}}createVAO(a,b,c){const d=this.context,e=d.getExtension('OES_vertex_array_object');if(!e)throw new Error(`Browser doesn't support VAOs`);const f=e.createVertexArrayOES();e.bindVertexArrayOES(f),this.bindIndicesBuffer(a),this.bindAttributeBuffer(0,2,b),this.bindAttributeBuffer(1,2,c),d.enableVertexAttribArray(0),d.enableVertexAttribArray(1)}bindAttributeBuffer(a,b,c){const d=this.context,e=d.createBuffer();d.bindBuffer(d.ARRAY_BUFFER,e),d.bufferData(d.ARRAY_BUFFER,c,d.STATIC_DRAW),d.vertexAttribPointer(a,b,d.FLOAT,!1,0,0),d.bindBuffer(d.ARRAY_BUFFER,null)}bindIndicesBuffer(a){const b=this.context,c=b.createBuffer();b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,c),b.bufferData(b.ELEMENT_ARRAY_BUFFER,a,b.STATIC_DRAW)}}class EditView extends View{constructor(){super(document.getElementById('edit-view')),this.destElement=document.getElementById('edit-dest'),this.sliders=new Map;for(const a of[...this.viewElement.getElementsByTagName('input')])this.sliders.set(a.id,a),a.addEventListener('input',()=>{this.animationFrame||(this.animationFrame=requestAnimationFrame(()=>this.draw()))});this.imageShader=new ImageShader,this.imageShader.setFragmentShader(fragmentShader),this.destElement.appendChild(this.imageShader.canvas)}show(){const a=this.getState();if(!a.id)throw new Error(`Couldn't get id of image`);this.imageElement=document.createElement('img'),this.imageElement.onload=()=>{URL.revokeObjectURL(this.imageElement.src),this.imageShader.setImage(this.imageElement),this.animationFrame=requestAnimationFrame(()=>this.draw())},db.retrieve(a.id).then((a)=>{this.imageElement.src=URL.createObjectURL(a)}),super.show()}hide(){cancelAnimationFrame(this.animationFrame),this.animationFrame=0,super.hide()}getState(){const a=super.getState();a.sliderValues=new Map;for(const[b,c]of this.sliders)a.sliderValues.set(b,+c.value);return a}setState(a){for(const[b,c]of this.sliders)c.value=c.defaultValue;if(a.sliderValues)for(let[b,c]of a.sliderValues)this.sliders.has(b)&&(this.sliders.get(b).value=c+'');super.setState(a)}draw(){const a=this.imageShader.canvas;a.width=this.imageElement.naturalWidth,a.height=this.imageElement.naturalHeight,this.imageShader.setUniform('sourceSize',new Float32Array([1/a.width,1/a.height]));for(const[a,b]of this.sliders){const c=+b.value/50;this.imageShader.setUniform(a,c)}this.animationFrame=0,this.imageShader.render()}}class ImageView extends View{constructor(){super(document.getElementById('image-view')),this.imageElement=document.getElementById('output-image'),this.editButton=document.getElementById('image-edit-button'),this.editButton.addEventListener('click',()=>this.edit())}show(){const a=this.getState();if(!a.id)throw new Error(`Couldn't get id of image`);this.imageElement.onload=()=>URL.revokeObjectURL(this.imageElement.src),db.retrieve(a.id).then((a)=>{this.imageElement.src=URL.createObjectURL(a)}),super.show()}edit(){const a=this.getState();if(!a.id)throw new Error(`Couldn't get id of image`);router.visit(`/edit/${a.id}`)}}class Router{constructor(){window.addEventListener('popstate',(a)=>this.changeHandler(a.state)),this.captureView=new CaptureView,this.editView=new EditView,this.imageView=new ImageView}changeHandler(a){if(window.location.pathname===this.currentLocation)return;this.currentLocation=window.location.pathname;const b=this.currentLocation.split('/');this.currentView&&this.currentView.hide(),a||(a=new ViewState);let c=null;switch(b[1]){case'':case'capture':c=this.captureView;break;case'edit':c=this.editView,a.id=+b[2];break;case'image':c=this.imageView,a.id=+b[2];break;default:console.log('404');}c?this.switch(c,a):console.log('Oh no, no view found!')}switch(a,b){this.currentView&&this.currentView.hide(),a.setState(b),a.show(),this.currentView=a}visit(a){if(window.location.href===a)return;let b;this.currentView&&(b=this.currentView.getState()),window.history.replaceState(b,'',window.location.href),window.history.pushState(null,'',a),this.changeHandler()}click(a){const b=a.target;a.metaKey||a.ctrlKey||0!==a.button||(a.preventDefault(),this.visit(b.href))}}var router=new Router;'serviceWorker'in navigator&&navigator.serviceWorker.register('/sw.js'),router.changeHandler();
